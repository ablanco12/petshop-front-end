{"ast":null,"code":"var _jsxFileName = \"/Users/a9999/petshop/src/App.js\";\nimport React, { Component, Fragment } from \"react\";\nimport Home from \"./components/Home\";\nimport FormApplication from \"./components/FormApplication\";\nimport CustomNav from \"./components/CustomNav\";\nimport Current from \"./components/Current\";\nimport Client from \"./components/Client\";\nimport SignUp from \"./components/SignUp\";\nimport AddPet from \"./components/AddPet\";\nimport PetList from \"./components/PetList\";\nimport EditPet from \"./components/EditPet\";\nimport EditClient from \"./components/EditClient\";\nimport _ from \"lodash\";\nimport \"./App.css\";\nimport { Switch, Route, withRouter } from \"react-router-dom\";\nconst initialState = {\n  isLoading: false,\n  results: [],\n  value: \"\"\n};\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      accounts: {\n        username: \"\",\n        password: \"\"\n      },\n      clientInfo: {\n        firstname: \"\",\n        lastname: \"\",\n        homephone: \"\",\n        workphone: \"\"\n      },\n      petInfo: {\n        name: \"\",\n        color: \"\",\n        specialconcerns: \"\",\n        rabies: \"\"\n      },\n      clients: \"\",\n      client_id: \"\",\n      clientName: \"\",\n      breedId: \"\",\n      breedName: \"\",\n      clientPets: \"\",\n      services: \"\",\n      serviceId: \"\",\n      breeds: \"\",\n      initialState: \"\",\n      clientIdOnSelect: \"\",\n      pets: \"\",\n      petIdOnSelect: \"\"\n    };\n\n    this.fetchingAllClients = () => {\n      fetch(`http://localhost:3000/clients`).then(resp => resp.json()).then(clients => {\n        this.setState({\n          clients\n        });\n      });\n    };\n\n    this.fetchingAllBreed = () => {\n      fetch(`http://localhost:3000/breeds`).then(resp => resp.json()).then(breeds => {\n        this.setState({\n          breeds\n        });\n      });\n    };\n\n    this.fetchingAllServices = () => {\n      fetch(`http://localhost:3000/services`).then(resp => resp.json()).then(services => {\n        console.log(\"fetching all services\", services);\n        this.setState({\n          services\n        });\n      });\n    };\n\n    this.fetchingAllPets = () => {\n      fetch(`http://localhost:3000/pets`).then(resp => resp.json()).then(pets => {\n        console.log(\"fetching all pets\", pets);\n        this.setState({\n          pets\n        });\n      });\n    };\n\n    this.fetchingAllAppointments = () => {\n      fetch(`http://localhost:3000/appointments`).then(resp => resp.json()).then(appointments => {\n        console.log(\"fetching all pets\", appointments);\n        this.setState({\n          appointments\n        });\n      });\n    };\n\n    this.submitingPet = event => {\n      this.props.history.push(\"pet\");\n      const {\n        petInfo,\n        breedId,\n        client_id\n      } = this.state;\n      console.log(\"breed id ----> \", breedId);\n      event.preventDefault();\n      const configObj = {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Accept: \"application/json\"\n        },\n        body: JSON.stringify({\n          pet: {\n            name: petInfo.name,\n            color: petInfo.color,\n            specialconcerns: petInfo.specialconcerns,\n            rabies: petInfo.rabies,\n            breed_id: breedId,\n            client_id: client_id\n          }\n        })\n      };\n      fetch(`http://localhost:3000/pets`, configObj).then(resp => resp.json()).then(pet => {\n        this.setState({\n          petInfo: {\n            name: \"\",\n            color: \"\",\n            specialconcerns: \"\",\n            rabies: \"\"\n          }\n        });\n        const client_id = this.state.client_id;\n        this.fetchingClientPets(client_id);\n      });\n    };\n\n    this.submitingEditPet = event => {\n      event.preventDefault();\n      const {\n        petInfo,\n        client_id,\n        breedId\n      } = this.state;\n      const petId = petInfo.id;\n      const configObj = {\n        method: \"PUT\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Accept: \"application/json\"\n        },\n        body: JSON.stringify({\n          pet: {\n            name: petInfo.name,\n            color: petInfo.color,\n            specialconcerns: petInfo.specialconcerns,\n            rabies: petInfo.rabies,\n            breed_id: breedId,\n            client_id: client_id\n          }\n        })\n      };\n      fetch(`http://localhost:3000/pets/${petId}`, configObj).then(resp => resp.json()).then(pet => {\n        console.log(pet);\n        this.fetchingClientPets(client_id);\n        this.setState({\n          petInfo: {\n            name: \"\",\n            color: \"\",\n            specialconcerns: \"\",\n            rabies: \"\"\n          }\n        });\n      });\n      this.props.history.push(\"/pet\");\n    };\n\n    this.petBreedOnChange = breed => {\n      const breedId = breed.id;\n      const breedName = breed.name;\n      this.setState({\n        breedId\n      });\n      this.setState({\n        breedName\n      });\n    };\n\n    this.submitingEditClient = event => {\n      event.preventDefault();\n      const {\n        clientInfo,\n        client_id\n      } = this.state;\n      const c_id = clientInfo.id;\n      const configObj = {\n        method: \"PUT\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Accept: \"application/json\"\n        },\n        body: JSON.stringify({\n          client: {\n            lastname: clientInfo.lastname,\n            firstname: clientInfo.firstname,\n            homephone: clientInfo.homephone,\n            workphone: clientInfo.workphone\n          }\n        })\n      };\n      fetch(`http://localhost:3000/clients/${c_id}`, configObj).then(resp => resp.json()).then(pet => {\n        console.log(pet);\n        this.fetchingClientPets(client_id);\n        this.setState({\n          clientInfo: {\n            firstname: \"\",\n            lastname: \"\",\n            homephone: \"\",\n            workphone: \"\"\n          }\n        });\n        this.fetchingAllClients();\n      });\n      this.props.history.push(\"/client\");\n    };\n\n    this.petBreedOnChange = (e, breed) => {\n      console.log(\"breed change\", breed.value);\n      const breedId = breed.value;\n      const breedName = breed.name;\n      this.setState({\n        breedId\n      });\n      this.setState({\n        breedName\n      });\n    };\n\n    this.petInfoInputChange = event => {\n      const petInfo = { ...this.state.petInfo\n      };\n      petInfo[event.currentTarget.name] = event.currentTarget.value;\n      this.setState({\n        petInfo\n      });\n    };\n\n    this.handleLoginChange = event => {\n      const login = { ...this.state.login\n      };\n      login[event.currentTarget.name] = event.currentTarget.value;\n      this.setState({\n        login\n      });\n    };\n\n    this.handleChange = event => {\n      const accounts = { ...this.state.accounts\n      };\n      accounts[event.currentTarget.name] = event.currentTarget.value;\n      this.setState({\n        accounts\n      });\n    };\n\n    this.formHandleChange = event => {\n      const clientInfo = { ...this.state.clientInfo\n      };\n      clientInfo[event.currentTarget.name] = event.currentTarget.value;\n      this.setState({\n        clientInfo\n      });\n    };\n\n    this.handleClick = event => {\n      const {\n        login\n      } = this.state;\n      event.preventDefault();\n      const configObj = {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Accept: \"application/json\"\n        },\n        body: JSON.stringify({\n          user: {\n            username: login.username,\n            password: login.password\n          }\n        })\n      };\n      fetch(`http://localhost:3000/login`, configObj).then(resp => resp.json()).then(json => {\n        // console.log(\"json\", json);\n        if (!json.hasOwnProperty(\"error\")) {\n          window.localStorage.setItem(\"token\", json.jwt);\n          window.localStorage.setItem(\"username\", json.user.username);\n          window.localStorage.setItem(\"userId\", `${json.user.id}`); // window.location.assign(\"http://localhost:3000/users\");\n\n          this.setState({\n            current_user: json.user\n          }); // console.log(\"fetching\", json);\n        } else {\n          this.setState({\n            error: json.error\n          });\n        }\n      }).then(data => {\n        const localUserId = localStorage.getItem(\"userId\");\n\n        if (localUserId) {\n          this.fetchCurrentUser(localUserId);\n        }\n      }).catch(error => console.log(\"username or password did not match\"));\n      this.setState({\n        username: \"\",\n        password: \"\"\n      });\n      this.props.history.push(\"/\");\n    };\n\n    this.fetchingClientPets = client_id => {\n      console.log(\"client info\");\n      fetch(`http://localhost:3000/clients/${client_id}`).then(resp => resp.json()).then(pets => {\n        console.log(\"my response\", pets);\n        this.setState({\n          clientPets: pets\n        });\n      });\n    };\n\n    this.addingPetToAClient = client => {\n      const client_id = client.id;\n      this.fetchingClientPets(client_id);\n      this.setState({\n        client_id\n      });\n      this.setState({\n        clientName: client.firstname\n      });\n      this.props.history.push(\"/addPet\");\n    };\n\n    this.addingUser = event => {\n      event.preventDefault();\n      const {\n        accounts\n      } = this.state;\n      const configObj = {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Accept: \"application/json\"\n        },\n        body: JSON.stringify({\n          user: {\n            username: accounts.username,\n            password: accounts.password\n          }\n        })\n      };\n      fetch(`http://localhost:3000/signup`, configObj).then(resp => resp.json()).then(json => {\n        console.log(\"json\", json);\n        this.props.history.push(\"/\");\n      });\n    };\n\n    this.clientPetOnClick = client => {\n      const client_id = client.id;\n      this.fetchingClientPets(client_id);\n      this.setState({\n        client_id\n      });\n      this.setState({\n        clientName: client.firstname\n      });\n      this.props.history.push(\"/pet\");\n    };\n\n    this.petOnClickDelete = pet => {\n      const petId = pet.id;\n      const pets = this.state.clientPets.filter(d => d.id !== petId);\n      this.setState({\n        clientPets: pets\n      });\n      fetch(`http://localhost:3000/pets/${petId}`, {\n        method: \"DELETE\"\n      });\n    };\n\n    this.deletePetHandleClick = client => {\n      const clientId = client.id;\n      const clients = this.state.clients.filter(c => c.id !== clientId);\n      this.setState({\n        clients\n      });\n      fetch(`http://localhost:3000/clients/${clientId}`, {\n        method: \"DELETE\"\n      });\n    };\n\n    this.petOnClickEdit = pet => {\n      this.setState({\n        petInfo: pet\n      });\n      this.props.history.push(\"/editPet\");\n    };\n\n    this.addingClient = event => {\n      event.preventDefault();\n      const {\n        clientInfo\n      } = this.state;\n      fetch(\"http://localhost:3000/clients\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Accept: \"application/json\"\n        },\n        body: JSON.stringify({\n          client: {\n            lastname: clientInfo.lastname,\n            firstname: clientInfo.firstname,\n            homephone: clientInfo.homephone,\n            workphone: clientInfo.workphone\n          }\n        })\n      }).then(r => r.json()).then(client => {\n        console.log(\"after submitting\", client);\n        this.setState({\n          clientInfo: {\n            firstname: \"\",\n            lastname: \"\",\n            homephone: \"\",\n            workphone: \"\"\n          }\n        });\n        this.fetchingAllClients();\n      });\n      this.props.history.push(\"/client\");\n    };\n\n    this.clientOnClickEdit = clientInfo => {\n      this.setState({\n        clientInfo\n      });\n      this.props.history.push(\"/editclient\");\n    };\n\n    this.servicesOnClick = (e, service) => {\n      console.log(e);\n      console.log(\"service => \", service.value);\n      const serviceId = service.value;\n      this.setState({\n        serviceId\n      });\n    };\n\n    this.selectPetOnClick = (e, pet) => {\n      console.log(\"pet -> \", pet.value);\n      const petIdOnSelect = pet.value;\n      this.setState({\n        petIdOnSelect\n      });\n    };\n\n    this.checkIn = event => {\n      event.preventDefault();\n      fetch(\"http://localhost:3000/appointments\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Accept: \"application/json\"\n        },\n        body: JSON.stringify({\n          appointment: {\n            pet_id: this.state.petIdOnSelect,\n            service_id: this.state.serviceId\n          }\n        })\n      }).then(r => r.json()).then(appointments => {\n        console.log(\"after submitting\", appointments);\n        this.setState({\n          appointments\n        });\n      });\n    };\n\n    this.handleResultSelect = (e, {\n      result\n    }) => this.setState({\n      value: result.title\n    });\n\n    this.handleSearchChange = (e, {\n      value\n    }) => {\n      this.setState({\n        isLoading: true,\n        value\n      });\n      setTimeout(() => {\n        if (this.state.value.length < 1) return this.setState({\n          initialState: initialState\n        });\n        const re = new RegExp(_.escapeRegExp(this.state.value), \"i\");\n\n        const isMatch = result => re.test(result.title);\n\n        this.setState({\n          isLoading: false,\n          results: _.filter(this.state.clients, isMatch)\n        });\n      }, 300);\n    };\n  }\n\n  componentDidMount() {\n    this.fetchingAllClients();\n    this.fetchingAllBreed();\n    this.fetchingAllPets();\n    this.fetchingAllServices();\n    fetchingAllAppointments;\n  }\n\n  render() {\n    console.log(\"pets\", this.state.pets);\n    return /*#__PURE__*/React.createElement(Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 487,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      class: \"ui huge header center aligned blue\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 488,\n        columnNumber: 9\n      }\n    }, \"K9 Grooming\", /*#__PURE__*/React.createElement(\"div\", {\n      class: \"sub header\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 490,\n        columnNumber: 11\n      }\n    }, \"Manage your account settings and set e-mail preferences.\")), /*#__PURE__*/React.createElement(\"div\", {\n      class: \"ui pointing menu\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 494,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(CustomNav, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 495,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      class: \"ui segment\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 497,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Switch, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 498,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Route, {\n      exact: true,\n      path: \"/\",\n      render: () => /*#__PURE__*/React.createElement(Home, {\n        services: this.state.services,\n        servicesOnClick: this.servicesOnClick,\n        selectPetOnClick: this.selectPetOnClick,\n        pets: this.state.pets,\n        checkIn: this.checkIn,\n        appointments: this.state.appointments,\n        handleResultSelect: this.handleResultSelect,\n        handleSearchChange: this.handleSearchChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 503,\n          columnNumber: 17\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 499,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      exact: true,\n      path: \"/form\",\n      render: () => /*#__PURE__*/React.createElement(FormApplication, {\n        addingClient: this.addingClient,\n        clientInfo: this.state.clientInfo,\n        formHandleChange: this.formHandleChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 519,\n          columnNumber: 17\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 515,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      exact: true,\n      path: \"/current\",\n      render: () => /*#__PURE__*/React.createElement(Current, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 526,\n          columnNumber: 56\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 526,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      exact: true,\n      path: \"/client\",\n      render: () => /*#__PURE__*/React.createElement(Client, {\n        deletePetHandleClick: this.deletePetHandleClick,\n        clients: this.state.clients,\n        addingPetToAClient: this.addingPetToAClient,\n        clientOnClickEdit: this.clientOnClickEdit,\n        clientPetOnClick: this.clientPetOnClick,\n        clientPets: this.state.clientPets,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 531,\n          columnNumber: 17\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 527,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      exact: true,\n      path: \"/customnav\",\n      render: () => /*#__PURE__*/React.createElement(CustomNav, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 541,\n          columnNumber: 58\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 541,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      exact: true,\n      path: \"/signup\",\n      render: () => /*#__PURE__*/React.createElement(SignUp, {\n        handleChange: this.handleChange,\n        accounts: this.state.accounts,\n        addingUser: this.addingUser,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 546,\n          columnNumber: 17\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 542,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      exact: true,\n      path: \"/addPet\",\n      render: () => /*#__PURE__*/React.createElement(AddPet, {\n        petOnClickEdit: this.petOnClickEdit,\n        petInfo: this.state.petInfo,\n        breeds: this.state.breeds,\n        submitingPet: this.submitingPet,\n        petInfoInputChange: this.petInfoInputChange,\n        clientPets: this.state.clientPets,\n        petBreedOnChange: this.petBreedOnChange,\n        breedName: this.state.breedName,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 557,\n          columnNumber: 17\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 553,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      exact: true,\n      path: \"/editPet\",\n      render: () => /*#__PURE__*/React.createElement(EditPet, {\n        petInfo: this.state.petInfo,\n        breeds: this.state.breeds,\n        submitingEditPet: this.submitingEditPet,\n        petInfoInputChange: this.petInfoInputChange,\n        clientPets: this.state.clientPets,\n        petBreedOnChange: this.petBreedOnChange,\n        breedName: this.state.breedName,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 573,\n          columnNumber: 17\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 569,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      exact: true,\n      path: \"/editclient\",\n      render: () => /*#__PURE__*/React.createElement(EditClient, {\n        submitingEditClient: this.submitingEditClient,\n        clientInfo: this.state.clientInfo,\n        formHandleChange: this.formHandleChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 588,\n          columnNumber: 17\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 584,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      exact: true,\n      path: \"/pet\",\n      render: () => /*#__PURE__*/React.createElement(PetList, {\n        clientPets: this.state.clientPets,\n        clientName: this.state.clientName,\n        petOnClickDelete: this.petOnClickDelete,\n        petOnClickEdit: this.petOnClickEdit,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 599,\n          columnNumber: 17\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 595,\n        columnNumber: 13\n      }\n    }))));\n  }\n\n}\n\nexport default withRouter(App);\n{\n  /* <div>\n        <div class=\"ui huge header center aligned blue\">K9 Grooming</div>\n        <div class=\"ui grid\">\n          <div class=\"four column\">\n            <CustomNav />\n            <Switch>\n              <Route exact path=\"/\" render={() => <Home />} />\n              <Route\n                exact\n                path=\"/form\"\n                render={() => (\n                  <FormApplication\n                    addingClient={this.addingClient}\n                    clientInfo={this.state.clientInfo}\n                    formHandleChange={this.formHandleChange}\n                  />\n                )}\n              />\n              <Route exact path=\"/current\" render={() => <Current />} />\n              <Route\n                exact\n                path=\"/client\"\n                render={() => (\n                  <Client\n                    deletePetHandleClick={this.deletePetHandleClick}\n                    clients={this.state.clients}\n                    addingPetToAClient={this.addingPetToAClient}\n                    clientPetOnClick={this.clientPetOnClick}\n                    clientPets={this.state.clientPets}\n                  />\n                )}\n              />\n              <Route exact path=\"/customnav\" render={() => <CustomNav />} />\n              <Route\n                exact\n                path=\"/signup\"\n                render={() => (\n                  <SignUp\n                    handleChange={this.handleChange}\n                    accounts={this.state.accounts}\n                    addingUser={this.addingUser}\n                  />\n                )}\n              />\n              <Route\n                exact\n                path=\"/addPet\"\n                render={() => (\n                  <AddPet\n                    petOnClickEdit={this.petOnClickEdit}\n                    petInfo={this.state.petInfo}\n                    breeds={this.state.breeds}\n                    submitingPet={this.submitingPet}\n                    petInfoInputChange={this.petInfoInputChange}\n                    clientPets={this.state.clientPets}\n                    petBreedOnChange={this.petBreedOnChange}\n                    breedName={this.state.breedName}\n                  />\n                )}\n              />\n              <Route\n                exact\n                path=\"/editPet\"\n                render={() => (\n                  <EditPet\n                    petInfo={this.state.petInfo}\n                    breeds={this.state.breeds}\n                    submitingEditPet={this.submitingEditPet}\n                    petInfoInputChange={this.petInfoInputChange}\n                    clientPets={this.state.clientPets}\n                    petBreedOnChange={this.petBreedOnChange}\n                    breedName={this.state.breedName}\n                  />\n                )}\n              />\n              <Route\n                exact\n                path=\"/pet\"\n                render={() => (\n                  <PetList\n                    clientPets={this.state.clientPets}\n                    clientName={this.state.clientName}\n                    petOnClickDelete={this.petOnClickDelete}\n                    petOnClickEdit={this.petOnClickEdit}\n                  />\n                )}\n              />\n            </Switch>\n          </div>\n        </div>\n      </div> */\n}","map":{"version":3,"sources":["/Users/a9999/petshop/src/App.js"],"names":["React","Component","Fragment","Home","FormApplication","CustomNav","Current","Client","SignUp","AddPet","PetList","EditPet","EditClient","_","Switch","Route","withRouter","initialState","isLoading","results","value","App","state","accounts","username","password","clientInfo","firstname","lastname","homephone","workphone","petInfo","name","color","specialconcerns","rabies","clients","client_id","clientName","breedId","breedName","clientPets","services","serviceId","breeds","clientIdOnSelect","pets","petIdOnSelect","fetchingAllClients","fetch","then","resp","json","setState","fetchingAllBreed","fetchingAllServices","console","log","fetchingAllPets","fetchingAllAppointments","appointments","submitingPet","event","props","history","push","preventDefault","configObj","method","headers","Accept","body","JSON","stringify","pet","breed_id","fetchingClientPets","submitingEditPet","petId","id","petBreedOnChange","breed","submitingEditClient","c_id","client","e","petInfoInputChange","currentTarget","handleLoginChange","login","handleChange","formHandleChange","handleClick","user","hasOwnProperty","window","localStorage","setItem","jwt","current_user","error","data","localUserId","getItem","fetchCurrentUser","catch","addingPetToAClient","addingUser","clientPetOnClick","petOnClickDelete","filter","d","deletePetHandleClick","clientId","c","petOnClickEdit","addingClient","r","clientOnClickEdit","servicesOnClick","service","selectPetOnClick","checkIn","appointment","pet_id","service_id","handleResultSelect","result","title","handleSearchChange","setTimeout","length","re","RegExp","escapeRegExp","isMatch","test","componentDidMount","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,IAAP,MAAiB,mBAAjB;AACA,OAAOC,eAAP,MAA4B,8BAA5B;AACA,OAAOC,SAAP,MAAsB,wBAAtB;AACA,OAAOC,OAAP,MAAoB,sBAApB;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,OAAP,MAAoB,sBAApB;AACA,OAAOC,OAAP,MAAoB,sBAApB;AACA,OAAOC,UAAP,MAAuB,yBAAvB;AACA,OAAOC,CAAP,MAAc,QAAd;AAEA,OAAO,WAAP;AAEA,SAASC,MAAT,EAAiBC,KAAjB,EAAwBC,UAAxB,QAA0C,kBAA1C;AACA,MAAMC,YAAY,GAAG;AAAEC,EAAAA,SAAS,EAAE,KAAb;AAAoBC,EAAAA,OAAO,EAAE,EAA7B;AAAiCC,EAAAA,KAAK,EAAE;AAAxC,CAArB;;AAEA,MAAMC,GAAN,SAAkBpB,SAAlB,CAA4B;AAAA;AAAA;AAAA,SAC1BqB,KAD0B,GAClB;AACNC,MAAAA,QAAQ,EAAE;AACRC,QAAAA,QAAQ,EAAE,EADF;AAERC,QAAAA,QAAQ,EAAE;AAFF,OADJ;AAKNC,MAAAA,UAAU,EAAE;AACVC,QAAAA,SAAS,EAAE,EADD;AAEVC,QAAAA,QAAQ,EAAE,EAFA;AAGVC,QAAAA,SAAS,EAAE,EAHD;AAIVC,QAAAA,SAAS,EAAE;AAJD,OALN;AAWNC,MAAAA,OAAO,EAAE;AACPC,QAAAA,IAAI,EAAE,EADC;AAEPC,QAAAA,KAAK,EAAE,EAFA;AAGPC,QAAAA,eAAe,EAAE,EAHV;AAIPC,QAAAA,MAAM,EAAE;AAJD,OAXH;AAiBNC,MAAAA,OAAO,EAAE,EAjBH;AAkBNC,MAAAA,SAAS,EAAE,EAlBL;AAmBNC,MAAAA,UAAU,EAAE,EAnBN;AAoBNC,MAAAA,OAAO,EAAE,EApBH;AAqBNC,MAAAA,SAAS,EAAE,EArBL;AAsBNC,MAAAA,UAAU,EAAE,EAtBN;AAuBNC,MAAAA,QAAQ,EAAE,EAvBJ;AAwBNC,MAAAA,SAAS,EAAE,EAxBL;AAyBNC,MAAAA,MAAM,EAAE,EAzBF;AA0BN3B,MAAAA,YAAY,EAAE,EA1BR;AA2BN4B,MAAAA,gBAAgB,EAAE,EA3BZ;AA4BNC,MAAAA,IAAI,EAAE,EA5BA;AA6BNC,MAAAA,aAAa,EAAE;AA7BT,KADkB;;AAAA,SAyC1BC,kBAzC0B,GAyCL,MAAM;AACzBC,MAAAA,KAAK,CAAE,+BAAF,CAAL,CACGC,IADH,CACSC,IAAD,IAAUA,IAAI,CAACC,IAAL,EADlB,EAEGF,IAFH,CAESd,OAAD,IAAa;AACjB,aAAKiB,QAAL,CAAc;AACZjB,UAAAA;AADY,SAAd;AAGD,OANH;AAOD,KAjDyB;;AAAA,SAmD1BkB,gBAnD0B,GAmDP,MAAM;AACvBL,MAAAA,KAAK,CAAE,8BAAF,CAAL,CACGC,IADH,CACSC,IAAD,IAAUA,IAAI,CAACC,IAAL,EADlB,EAEGF,IAFH,CAESN,MAAD,IAAY;AAChB,aAAKS,QAAL,CAAc;AACZT,UAAAA;AADY,SAAd;AAGD,OANH;AAOD,KA3DyB;;AAAA,SA6D1BW,mBA7D0B,GA6DJ,MAAM;AAC1BN,MAAAA,KAAK,CAAE,gCAAF,CAAL,CACGC,IADH,CACSC,IAAD,IAAUA,IAAI,CAACC,IAAL,EADlB,EAEGF,IAFH,CAESR,QAAD,IAAc;AAClBc,QAAAA,OAAO,CAACC,GAAR,CAAY,uBAAZ,EAAqCf,QAArC;AACA,aAAKW,QAAL,CAAc;AACZX,UAAAA;AADY,SAAd;AAGD,OAPH;AAQD,KAtEyB;;AAAA,SAwE1BgB,eAxE0B,GAwER,MAAM;AACtBT,MAAAA,KAAK,CAAE,4BAAF,CAAL,CACGC,IADH,CACSC,IAAD,IAAUA,IAAI,CAACC,IAAL,EADlB,EAEGF,IAFH,CAESJ,IAAD,IAAU;AACdU,QAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ,EAAiCX,IAAjC;AACA,aAAKO,QAAL,CAAc;AACZP,UAAAA;AADY,SAAd;AAGD,OAPH;AAQD,KAjFyB;;AAAA,SAmF1Ba,uBAnF0B,GAmFA,MAAM;AAC9BV,MAAAA,KAAK,CAAE,oCAAF,CAAL,CACGC,IADH,CACSC,IAAD,IAAUA,IAAI,CAACC,IAAL,EADlB,EAEGF,IAFH,CAESU,YAAD,IAAkB;AACtBJ,QAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ,EAAiCG,YAAjC;AACA,aAAKP,QAAL,CAAc;AACZO,UAAAA;AADY,SAAd;AAGD,OAPH;AAQD,KA5FyB;;AAAA,SA8F1BC,YA9F0B,GA8FVC,KAAD,IAAW;AACxB,WAAKC,KAAL,CAAWC,OAAX,CAAmBC,IAAnB,CAAwB,KAAxB;AACA,YAAM;AAAElC,QAAAA,OAAF;AAAWQ,QAAAA,OAAX;AAAoBF,QAAAA;AAApB,UAAkC,KAAKf,KAA7C;AACAkC,MAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ,EAA+BlB,OAA/B;AACAuB,MAAAA,KAAK,CAACI,cAAN;AACA,YAAMC,SAAS,GAAG;AAChBC,QAAAA,MAAM,EAAE,MADQ;AAEhBC,QAAAA,OAAO,EAAE;AACP,0BAAgB,kBADT;AAEPC,UAAAA,MAAM,EAAE;AAFD,SAFO;AAMhBC,QAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACnBC,UAAAA,GAAG,EAAE;AACH1C,YAAAA,IAAI,EAAED,OAAO,CAACC,IADX;AAEHC,YAAAA,KAAK,EAAEF,OAAO,CAACE,KAFZ;AAGHC,YAAAA,eAAe,EAAEH,OAAO,CAACG,eAHtB;AAIHC,YAAAA,MAAM,EAAEJ,OAAO,CAACI,MAJb;AAKHwC,YAAAA,QAAQ,EAAEpC,OALP;AAMHF,YAAAA,SAAS,EAAEA;AANR;AADc,SAAf;AANU,OAAlB;AAiBAY,MAAAA,KAAK,CAAE,4BAAF,EAA+BkB,SAA/B,CAAL,CACGjB,IADH,CACSC,IAAD,IAAUA,IAAI,CAACC,IAAL,EADlB,EAEGF,IAFH,CAESwB,GAAD,IAAS;AACb,aAAKrB,QAAL,CAAc;AACZtB,UAAAA,OAAO,EAAE;AACPC,YAAAA,IAAI,EAAE,EADC;AAEPC,YAAAA,KAAK,EAAE,EAFA;AAGPC,YAAAA,eAAe,EAAE,EAHV;AAIPC,YAAAA,MAAM,EAAE;AAJD;AADG,SAAd;AAQA,cAAME,SAAS,GAAG,KAAKf,KAAL,CAAWe,SAA7B;AACA,aAAKuC,kBAAL,CAAwBvC,SAAxB;AACD,OAbH;AAcD,KAlIyB;;AAAA,SAoI1BwC,gBApI0B,GAoINf,KAAD,IAAW;AAC5BA,MAAAA,KAAK,CAACI,cAAN;AACA,YAAM;AAAEnC,QAAAA,OAAF;AAAWM,QAAAA,SAAX;AAAsBE,QAAAA;AAAtB,UAAkC,KAAKjB,KAA7C;AACA,YAAMwD,KAAK,GAAG/C,OAAO,CAACgD,EAAtB;AACA,YAAMZ,SAAS,GAAG;AAChBC,QAAAA,MAAM,EAAE,KADQ;AAEhBC,QAAAA,OAAO,EAAE;AACP,0BAAgB,kBADT;AAEPC,UAAAA,MAAM,EAAE;AAFD,SAFO;AAMhBC,QAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACnBC,UAAAA,GAAG,EAAE;AACH1C,YAAAA,IAAI,EAAED,OAAO,CAACC,IADX;AAEHC,YAAAA,KAAK,EAAEF,OAAO,CAACE,KAFZ;AAGHC,YAAAA,eAAe,EAAEH,OAAO,CAACG,eAHtB;AAIHC,YAAAA,MAAM,EAAEJ,OAAO,CAACI,MAJb;AAKHwC,YAAAA,QAAQ,EAAEpC,OALP;AAMHF,YAAAA,SAAS,EAAEA;AANR;AADc,SAAf;AANU,OAAlB;AAiBAY,MAAAA,KAAK,CAAE,8BAA6B6B,KAAM,EAArC,EAAwCX,SAAxC,CAAL,CACGjB,IADH,CACSC,IAAD,IAAUA,IAAI,CAACC,IAAL,EADlB,EAEGF,IAFH,CAESwB,GAAD,IAAS;AACblB,QAAAA,OAAO,CAACC,GAAR,CAAYiB,GAAZ;AACA,aAAKE,kBAAL,CAAwBvC,SAAxB;AACA,aAAKgB,QAAL,CAAc;AACZtB,UAAAA,OAAO,EAAE;AACPC,YAAAA,IAAI,EAAE,EADC;AAEPC,YAAAA,KAAK,EAAE,EAFA;AAGPC,YAAAA,eAAe,EAAE,EAHV;AAIPC,YAAAA,MAAM,EAAE;AAJD;AADG,SAAd;AAQD,OAbH;AAcA,WAAK4B,KAAL,CAAWC,OAAX,CAAmBC,IAAnB,CAAwB,MAAxB;AACD,KAxKyB;;AAAA,SAyK1Be,gBAzK0B,GAyKNC,KAAD,IAAW;AAC5B,YAAM1C,OAAO,GAAG0C,KAAK,CAACF,EAAtB;AACA,YAAMvC,SAAS,GAAGyC,KAAK,CAACjD,IAAxB;AACA,WAAKqB,QAAL,CAAc;AAAEd,QAAAA;AAAF,OAAd;AACA,WAAKc,QAAL,CAAc;AAAEb,QAAAA;AAAF,OAAd;AACD,KA9KyB;;AAAA,SAgL1B0C,mBAhL0B,GAgLHpB,KAAD,IAAW;AAC/BA,MAAAA,KAAK,CAACI,cAAN;AACA,YAAM;AAAExC,QAAAA,UAAF;AAAcW,QAAAA;AAAd,UAA4B,KAAKf,KAAvC;AACA,YAAM6D,IAAI,GAAGzD,UAAU,CAACqD,EAAxB;AACA,YAAMZ,SAAS,GAAG;AAChBC,QAAAA,MAAM,EAAE,KADQ;AAEhBC,QAAAA,OAAO,EAAE;AACP,0BAAgB,kBADT;AAEPC,UAAAA,MAAM,EAAE;AAFD,SAFO;AAMhBC,QAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACnBW,UAAAA,MAAM,EAAE;AACNxD,YAAAA,QAAQ,EAAEF,UAAU,CAACE,QADf;AAEND,YAAAA,SAAS,EAAED,UAAU,CAACC,SAFhB;AAGNE,YAAAA,SAAS,EAAEH,UAAU,CAACG,SAHhB;AAINC,YAAAA,SAAS,EAAEJ,UAAU,CAACI;AAJhB;AADW,SAAf;AANU,OAAlB;AAeAmB,MAAAA,KAAK,CAAE,iCAAgCkC,IAAK,EAAvC,EAA0ChB,SAA1C,CAAL,CACGjB,IADH,CACSC,IAAD,IAAUA,IAAI,CAACC,IAAL,EADlB,EAEGF,IAFH,CAESwB,GAAD,IAAS;AACblB,QAAAA,OAAO,CAACC,GAAR,CAAYiB,GAAZ;AACA,aAAKE,kBAAL,CAAwBvC,SAAxB;AACA,aAAKgB,QAAL,CAAc;AACZ3B,UAAAA,UAAU,EAAE;AACVC,YAAAA,SAAS,EAAE,EADD;AAEVC,YAAAA,QAAQ,EAAE,EAFA;AAGVC,YAAAA,SAAS,EAAE,EAHD;AAIVC,YAAAA,SAAS,EAAE;AAJD;AADA,SAAd;AAQA,aAAKkB,kBAAL;AACD,OAdH;AAeA,WAAKe,KAAL,CAAWC,OAAX,CAAmBC,IAAnB,CAAwB,SAAxB;AACD,KAnNyB;;AAAA,SAoN1Be,gBApN0B,GAoNP,CAACK,CAAD,EAAIJ,KAAJ,KAAc;AAC/BzB,MAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ,EAA4BwB,KAAK,CAAC7D,KAAlC;AACA,YAAMmB,OAAO,GAAG0C,KAAK,CAAC7D,KAAtB;AACA,YAAMoB,SAAS,GAAGyC,KAAK,CAACjD,IAAxB;AACA,WAAKqB,QAAL,CAAc;AAAEd,QAAAA;AAAF,OAAd;AACA,WAAKc,QAAL,CAAc;AAAEb,QAAAA;AAAF,OAAd;AACD,KA1NyB;;AAAA,SA4N1B8C,kBA5N0B,GA4NJxB,KAAD,IAAW;AAC9B,YAAM/B,OAAO,GAAG,EAAE,GAAG,KAAKT,KAAL,CAAWS;AAAhB,OAAhB;AACAA,MAAAA,OAAO,CAAC+B,KAAK,CAACyB,aAAN,CAAoBvD,IAArB,CAAP,GAAoC8B,KAAK,CAACyB,aAAN,CAAoBnE,KAAxD;AACA,WAAKiC,QAAL,CAAc;AAAEtB,QAAAA;AAAF,OAAd;AACD,KAhOyB;;AAAA,SAkO1ByD,iBAlO0B,GAkOL1B,KAAD,IAAW;AAC7B,YAAM2B,KAAK,GAAG,EAAE,GAAG,KAAKnE,KAAL,CAAWmE;AAAhB,OAAd;AACAA,MAAAA,KAAK,CAAC3B,KAAK,CAACyB,aAAN,CAAoBvD,IAArB,CAAL,GAAkC8B,KAAK,CAACyB,aAAN,CAAoBnE,KAAtD;AACA,WAAKiC,QAAL,CAAc;AAAEoC,QAAAA;AAAF,OAAd;AACD,KAtOyB;;AAAA,SAwO1BC,YAxO0B,GAwOV5B,KAAD,IAAW;AACxB,YAAMvC,QAAQ,GAAG,EAAE,GAAG,KAAKD,KAAL,CAAWC;AAAhB,OAAjB;AACAA,MAAAA,QAAQ,CAACuC,KAAK,CAACyB,aAAN,CAAoBvD,IAArB,CAAR,GAAqC8B,KAAK,CAACyB,aAAN,CAAoBnE,KAAzD;AACA,WAAKiC,QAAL,CAAc;AAAE9B,QAAAA;AAAF,OAAd;AACD,KA5OyB;;AAAA,SA8O1BoE,gBA9O0B,GA8ON7B,KAAD,IAAW;AAC5B,YAAMpC,UAAU,GAAG,EAAE,GAAG,KAAKJ,KAAL,CAAWI;AAAhB,OAAnB;AACAA,MAAAA,UAAU,CAACoC,KAAK,CAACyB,aAAN,CAAoBvD,IAArB,CAAV,GAAuC8B,KAAK,CAACyB,aAAN,CAAoBnE,KAA3D;AACA,WAAKiC,QAAL,CAAc;AAAE3B,QAAAA;AAAF,OAAd;AACD,KAlPyB;;AAAA,SAoP1BkE,WApP0B,GAoPX9B,KAAD,IAAW;AACvB,YAAM;AAAE2B,QAAAA;AAAF,UAAY,KAAKnE,KAAvB;AACAwC,MAAAA,KAAK,CAACI,cAAN;AACA,YAAMC,SAAS,GAAG;AAChBC,QAAAA,MAAM,EAAE,MADQ;AAEhBC,QAAAA,OAAO,EAAE;AACP,0BAAgB,kBADT;AAEPC,UAAAA,MAAM,EAAE;AAFD,SAFO;AAMhBC,QAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACnBoB,UAAAA,IAAI,EAAE;AACJrE,YAAAA,QAAQ,EAAEiE,KAAK,CAACjE,QADZ;AAEJC,YAAAA,QAAQ,EAAEgE,KAAK,CAAChE;AAFZ;AADa,SAAf;AANU,OAAlB;AAaAwB,MAAAA,KAAK,CAAE,6BAAF,EAAgCkB,SAAhC,CAAL,CACGjB,IADH,CACSC,IAAD,IAAUA,IAAI,CAACC,IAAL,EADlB,EAEGF,IAFH,CAESE,IAAD,IAAU;AACd;AACA,YAAI,CAACA,IAAI,CAAC0C,cAAL,CAAoB,OAApB,CAAL,EAAmC;AACjCC,UAAAA,MAAM,CAACC,YAAP,CAAoBC,OAApB,CAA4B,OAA5B,EAAqC7C,IAAI,CAAC8C,GAA1C;AACAH,UAAAA,MAAM,CAACC,YAAP,CAAoBC,OAApB,CAA4B,UAA5B,EAAwC7C,IAAI,CAACyC,IAAL,CAAUrE,QAAlD;AACAuE,UAAAA,MAAM,CAACC,YAAP,CAAoBC,OAApB,CAA4B,QAA5B,EAAuC,GAAE7C,IAAI,CAACyC,IAAL,CAAUd,EAAG,EAAtD,EAHiC,CAIjC;;AACA,eAAK1B,QAAL,CAAc;AAAE8C,YAAAA,YAAY,EAAE/C,IAAI,CAACyC;AAArB,WAAd,EALiC,CAMjC;AACD,SAPD,MAOO;AACL,eAAKxC,QAAL,CAAc;AAAE+C,YAAAA,KAAK,EAAEhD,IAAI,CAACgD;AAAd,WAAd;AACD;AACF,OAdH,EAeGlD,IAfH,CAeSmD,IAAD,IAAU;AACd,cAAMC,WAAW,GAAGN,YAAY,CAACO,OAAb,CAAqB,QAArB,CAApB;;AAEA,YAAID,WAAJ,EAAiB;AACf,eAAKE,gBAAL,CAAsBF,WAAtB;AACD;AACF,OArBH,EAsBGG,KAtBH,CAsBUL,KAAD,IAAW5C,OAAO,CAACC,GAAR,CAAY,oCAAZ,CAtBpB;AAuBA,WAAKJ,QAAL,CAAc;AACZ7B,QAAAA,QAAQ,EAAE,EADE;AAEZC,QAAAA,QAAQ,EAAE;AAFE,OAAd;AAKA,WAAKsC,KAAL,CAAWC,OAAX,CAAmBC,IAAnB,CAAwB,GAAxB;AACD,KAjSyB;;AAAA,SAmS1BW,kBAnS0B,GAmSJvC,SAAD,IAAe;AAClCmB,MAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ;AACAR,MAAAA,KAAK,CAAE,iCAAgCZ,SAAU,EAA5C,CAAL,CACGa,IADH,CACSC,IAAD,IAAUA,IAAI,CAACC,IAAL,EADlB,EAEGF,IAFH,CAESJ,IAAD,IAAU;AACdU,QAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ,EAA2BX,IAA3B;AACA,aAAKO,QAAL,CAAc;AACZZ,UAAAA,UAAU,EAAEK;AADA,SAAd;AAGD,OAPH;AAQD,KA7SyB;;AAAA,SA+S1B4D,kBA/S0B,GA+SJtB,MAAD,IAAY;AAC/B,YAAM/C,SAAS,GAAG+C,MAAM,CAACL,EAAzB;AACA,WAAKH,kBAAL,CAAwBvC,SAAxB;AACA,WAAKgB,QAAL,CAAc;AAAEhB,QAAAA;AAAF,OAAd;AACA,WAAKgB,QAAL,CAAc;AAAEf,QAAAA,UAAU,EAAE8C,MAAM,CAACzD;AAArB,OAAd;AACA,WAAKoC,KAAL,CAAWC,OAAX,CAAmBC,IAAnB,CAAwB,SAAxB;AACD,KArTyB;;AAAA,SAuT1B0C,UAvT0B,GAuTZ7C,KAAD,IAAW;AACtBA,MAAAA,KAAK,CAACI,cAAN;AAEA,YAAM;AAAE3C,QAAAA;AAAF,UAAe,KAAKD,KAA1B;AACA,YAAM6C,SAAS,GAAG;AAChBC,QAAAA,MAAM,EAAE,MADQ;AAEhBC,QAAAA,OAAO,EAAE;AACP,0BAAgB,kBADT;AAEPC,UAAAA,MAAM,EAAE;AAFD,SAFO;AAMhBC,QAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACnBoB,UAAAA,IAAI,EAAE;AACJrE,YAAAA,QAAQ,EAAED,QAAQ,CAACC,QADf;AAEJC,YAAAA,QAAQ,EAAEF,QAAQ,CAACE;AAFf;AADa,SAAf;AANU,OAAlB;AAaAwB,MAAAA,KAAK,CAAE,8BAAF,EAAiCkB,SAAjC,CAAL,CACGjB,IADH,CACSC,IAAD,IAAUA,IAAI,CAACC,IAAL,EADlB,EAEGF,IAFH,CAESE,IAAD,IAAU;AACdI,QAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ,EAAoBL,IAApB;AACA,aAAKW,KAAL,CAAWC,OAAX,CAAmBC,IAAnB,CAAwB,GAAxB;AACD,OALH;AAMD,KA9UyB;;AAAA,SAgV1B2C,gBAhV0B,GAgVNxB,MAAD,IAAY;AAC7B,YAAM/C,SAAS,GAAG+C,MAAM,CAACL,EAAzB;AACA,WAAKH,kBAAL,CAAwBvC,SAAxB;AACA,WAAKgB,QAAL,CAAc;AAAEhB,QAAAA;AAAF,OAAd;AACA,WAAKgB,QAAL,CAAc;AAAEf,QAAAA,UAAU,EAAE8C,MAAM,CAACzD;AAArB,OAAd;AACA,WAAKoC,KAAL,CAAWC,OAAX,CAAmBC,IAAnB,CAAwB,MAAxB;AACD,KAtVyB;;AAAA,SAwV1B4C,gBAxV0B,GAwVNnC,GAAD,IAAS;AAC1B,YAAMI,KAAK,GAAGJ,GAAG,CAACK,EAAlB;AACA,YAAMjC,IAAI,GAAG,KAAKxB,KAAL,CAAWmB,UAAX,CAAsBqE,MAAtB,CAA8BC,CAAD,IAAOA,CAAC,CAAChC,EAAF,KAASD,KAA7C,CAAb;AACA,WAAKzB,QAAL,CAAc;AAAEZ,QAAAA,UAAU,EAAEK;AAAd,OAAd;AACAG,MAAAA,KAAK,CAAE,8BAA6B6B,KAAM,EAArC,EAAwC;AAC3CV,QAAAA,MAAM,EAAE;AADmC,OAAxC,CAAL;AAGD,KA/VyB;;AAAA,SAiW1B4C,oBAjW0B,GAiWF5B,MAAD,IAAY;AACjC,YAAM6B,QAAQ,GAAG7B,MAAM,CAACL,EAAxB;AACA,YAAM3C,OAAO,GAAG,KAAKd,KAAL,CAAWc,OAAX,CAAmB0E,MAAnB,CAA2BI,CAAD,IAAOA,CAAC,CAACnC,EAAF,KAASkC,QAA1C,CAAhB;AACA,WAAK5D,QAAL,CAAc;AAAEjB,QAAAA;AAAF,OAAd;AACAa,MAAAA,KAAK,CAAE,iCAAgCgE,QAAS,EAA3C,EAA8C;AACjD7C,QAAAA,MAAM,EAAE;AADyC,OAA9C,CAAL;AAGD,KAxWyB;;AAAA,SA0W1B+C,cA1W0B,GA0WRzC,GAAD,IAAS;AACxB,WAAKrB,QAAL,CAAc;AAAEtB,QAAAA,OAAO,EAAE2C;AAAX,OAAd;AACA,WAAKX,KAAL,CAAWC,OAAX,CAAmBC,IAAnB,CAAwB,UAAxB;AACD,KA7WyB;;AAAA,SA+W1BmD,YA/W0B,GA+WVtD,KAAD,IAAW;AACxBA,MAAAA,KAAK,CAACI,cAAN;AACA,YAAM;AAAExC,QAAAA;AAAF,UAAiB,KAAKJ,KAA5B;AACA2B,MAAAA,KAAK,CAAC,+BAAD,EAAkC;AACrCmB,QAAAA,MAAM,EAAE,MAD6B;AAErCC,QAAAA,OAAO,EAAE;AACP,0BAAgB,kBADT;AAEPC,UAAAA,MAAM,EAAE;AAFD,SAF4B;AAMrCC,QAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACnBW,UAAAA,MAAM,EAAE;AACNxD,YAAAA,QAAQ,EAAEF,UAAU,CAACE,QADf;AAEND,YAAAA,SAAS,EAAED,UAAU,CAACC,SAFhB;AAGNE,YAAAA,SAAS,EAAEH,UAAU,CAACG,SAHhB;AAINC,YAAAA,SAAS,EAAEJ,UAAU,CAACI;AAJhB;AADW,SAAf;AAN+B,OAAlC,CAAL,CAeGoB,IAfH,CAeSmE,CAAD,IAAOA,CAAC,CAACjE,IAAF,EAff,EAgBGF,IAhBH,CAgBSkC,MAAD,IAAY;AAChB5B,QAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ,EAAgC2B,MAAhC;AACA,aAAK/B,QAAL,CAAc;AACZ3B,UAAAA,UAAU,EAAE;AACVC,YAAAA,SAAS,EAAE,EADD;AAEVC,YAAAA,QAAQ,EAAE,EAFA;AAGVC,YAAAA,SAAS,EAAE,EAHD;AAIVC,YAAAA,SAAS,EAAE;AAJD;AADA,SAAd;AAQA,aAAKkB,kBAAL;AACD,OA3BH;AA4BA,WAAKe,KAAL,CAAWC,OAAX,CAAmBC,IAAnB,CAAwB,SAAxB;AACD,KA/YyB;;AAAA,SAiZ1BqD,iBAjZ0B,GAiZL5F,UAAD,IAAgB;AAClC,WAAK2B,QAAL,CAAc;AAAE3B,QAAAA;AAAF,OAAd;AACA,WAAKqC,KAAL,CAAWC,OAAX,CAAmBC,IAAnB,CAAwB,aAAxB;AACD,KApZyB;;AAAA,SAsZ1BsD,eAtZ0B,GAsZR,CAAClC,CAAD,EAAImC,OAAJ,KAAgB;AAChChE,MAAAA,OAAO,CAACC,GAAR,CAAY4B,CAAZ;AACA7B,MAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ,EAA2B+D,OAAO,CAACpG,KAAnC;AAEA,YAAMuB,SAAS,GAAG6E,OAAO,CAACpG,KAA1B;AACA,WAAKiC,QAAL,CAAc;AAAEV,QAAAA;AAAF,OAAd;AACD,KA5ZyB;;AAAA,SA8Z1B8E,gBA9Z0B,GA8ZP,CAACpC,CAAD,EAAIX,GAAJ,KAAY;AAC7BlB,MAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBiB,GAAG,CAACtD,KAA3B;AAEA,YAAM2B,aAAa,GAAG2B,GAAG,CAACtD,KAA1B;AACA,WAAKiC,QAAL,CAAc;AAAEN,QAAAA;AAAF,OAAd;AACD,KAnayB;;AAAA,SAqa1B2E,OAra0B,GAqaf5D,KAAD,IAAW;AACnBA,MAAAA,KAAK,CAACI,cAAN;AACAjB,MAAAA,KAAK,CAAC,oCAAD,EAAuC;AAC1CmB,QAAAA,MAAM,EAAE,MADkC;AAE1CC,QAAAA,OAAO,EAAE;AACP,0BAAgB,kBADT;AAEPC,UAAAA,MAAM,EAAE;AAFD,SAFiC;AAM1CC,QAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACnBkD,UAAAA,WAAW,EAAE;AACXC,YAAAA,MAAM,EAAE,KAAKtG,KAAL,CAAWyB,aADR;AAEX8E,YAAAA,UAAU,EAAE,KAAKvG,KAAL,CAAWqB;AAFZ;AADM,SAAf;AANoC,OAAvC,CAAL,CAaGO,IAbH,CAaSmE,CAAD,IAAOA,CAAC,CAACjE,IAAF,EAbf,EAcGF,IAdH,CAcSU,YAAD,IAAkB;AACtBJ,QAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ,EAAgCG,YAAhC;AACA,aAAKP,QAAL,CAAc;AACZO,UAAAA;AADY,SAAd;AAGD,OAnBH;AAoBD,KA3byB;;AAAA,SA6b1BkE,kBA7b0B,GA6bL,CAACzC,CAAD,EAAI;AAAE0C,MAAAA;AAAF,KAAJ,KACnB,KAAK1E,QAAL,CAAc;AAAEjC,MAAAA,KAAK,EAAE2G,MAAM,CAACC;AAAhB,KAAd,CA9bwB;;AAAA,SAgc1BC,kBAhc0B,GAgcL,CAAC5C,CAAD,EAAI;AAAEjE,MAAAA;AAAF,KAAJ,KAAkB;AACrC,WAAKiC,QAAL,CAAc;AAAEnC,QAAAA,SAAS,EAAE,IAAb;AAAmBE,QAAAA;AAAnB,OAAd;AAEA8G,MAAAA,UAAU,CAAC,MAAM;AACf,YAAI,KAAK5G,KAAL,CAAWF,KAAX,CAAiB+G,MAAjB,GAA0B,CAA9B,EACE,OAAO,KAAK9E,QAAL,CAAc;AAAEpC,UAAAA,YAAY,EAAEA;AAAhB,SAAd,CAAP;AAEF,cAAMmH,EAAE,GAAG,IAAIC,MAAJ,CAAWxH,CAAC,CAACyH,YAAF,CAAe,KAAKhH,KAAL,CAAWF,KAA1B,CAAX,EAA6C,GAA7C,CAAX;;AACA,cAAMmH,OAAO,GAAIR,MAAD,IAAYK,EAAE,CAACI,IAAH,CAAQT,MAAM,CAACC,KAAf,CAA5B;;AAEA,aAAK3E,QAAL,CAAc;AACZnC,UAAAA,SAAS,EAAE,KADC;AAEZC,UAAAA,OAAO,EAAEN,CAAC,CAACiG,MAAF,CAAS,KAAKxF,KAAL,CAAWc,OAApB,EAA6BmG,OAA7B;AAFG,SAAd;AAID,OAXS,EAWP,GAXO,CAAV;AAYD,KA/cyB;AAAA;;AAiC1BE,EAAAA,iBAAiB,GAAG;AAClB,SAAKzF,kBAAL;AACA,SAAKM,gBAAL;AACA,SAAKI,eAAL;AACA,SAAKH,mBAAL;AACAI,IAAAA,uBAAuB;AACxB;;AA0aD+E,EAAAA,MAAM,GAAG;AACPlF,IAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ,EAAoB,KAAKnC,KAAL,CAAWwB,IAA/B;AACA,wBACE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,KAAK,EAAC,oCAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mCAEE;AAAK,MAAA,KAAK,EAAC,YAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kEAFF,CADF,eAOE;AAAK,MAAA,KAAK,EAAC,kBAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CAPF,eAUE;AAAK,MAAA,KAAK,EAAC,YAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,KAAD;AACE,MAAA,KAAK,MADP;AAEE,MAAA,IAAI,EAAC,GAFP;AAGE,MAAA,MAAM,EAAE,mBACN,oBAAC,IAAD;AACE,QAAA,QAAQ,EAAE,KAAKxB,KAAL,CAAWoB,QADvB;AAEE,QAAA,eAAe,EAAE,KAAK6E,eAFxB;AAGE,QAAA,gBAAgB,EAAE,KAAKE,gBAHzB;AAIE,QAAA,IAAI,EAAE,KAAKnG,KAAL,CAAWwB,IAJnB;AAKE,QAAA,OAAO,EAAE,KAAK4E,OALhB;AAME,QAAA,YAAY,EAAE,KAAKpG,KAAL,CAAWsC,YAN3B;AAOE,QAAA,kBAAkB,EAAE,KAAKkE,kBAP3B;AAQE,QAAA,kBAAkB,EAAE,KAAKG,kBAR3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAJJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,eAiBE,oBAAC,KAAD;AACE,MAAA,KAAK,MADP;AAEE,MAAA,IAAI,EAAC,OAFP;AAGE,MAAA,MAAM,EAAE,mBACN,oBAAC,eAAD;AACE,QAAA,YAAY,EAAE,KAAKb,YADrB;AAEE,QAAA,UAAU,EAAE,KAAK9F,KAAL,CAAWI,UAFzB;AAGE,QAAA,gBAAgB,EAAE,KAAKiE,gBAHzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAJJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAjBF,eA4BE,oBAAC,KAAD;AAAO,MAAA,KAAK,MAAZ;AAAa,MAAA,IAAI,EAAC,UAAlB;AAA6B,MAAA,MAAM,EAAE,mBAAM,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MA5BF,eA6BE,oBAAC,KAAD;AACE,MAAA,KAAK,MADP;AAEE,MAAA,IAAI,EAAC,SAFP;AAGE,MAAA,MAAM,EAAE,mBACN,oBAAC,MAAD;AACE,QAAA,oBAAoB,EAAE,KAAKqB,oBAD7B;AAEE,QAAA,OAAO,EAAE,KAAK1F,KAAL,CAAWc,OAFtB;AAGE,QAAA,kBAAkB,EAAE,KAAKsE,kBAH3B;AAIE,QAAA,iBAAiB,EAAE,KAAKY,iBAJ1B;AAKE,QAAA,gBAAgB,EAAE,KAAKV,gBALzB;AAME,QAAA,UAAU,EAAE,KAAKtF,KAAL,CAAWmB,UANzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAJJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MA7BF,eA2CE,oBAAC,KAAD;AAAO,MAAA,KAAK,MAAZ;AAAa,MAAA,IAAI,EAAC,YAAlB;AAA+B,MAAA,MAAM,EAAE,mBAAM,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MA3CF,eA4CE,oBAAC,KAAD;AACE,MAAA,KAAK,MADP;AAEE,MAAA,IAAI,EAAC,SAFP;AAGE,MAAA,MAAM,EAAE,mBACN,oBAAC,MAAD;AACE,QAAA,YAAY,EAAE,KAAKiD,YADrB;AAEE,QAAA,QAAQ,EAAE,KAAKpE,KAAL,CAAWC,QAFvB;AAGE,QAAA,UAAU,EAAE,KAAKoF,UAHnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAJJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MA5CF,eAuDE,oBAAC,KAAD;AACE,MAAA,KAAK,MADP;AAEE,MAAA,IAAI,EAAC,SAFP;AAGE,MAAA,MAAM,EAAE,mBACN,oBAAC,MAAD;AACE,QAAA,cAAc,EAAE,KAAKQ,cADvB;AAEE,QAAA,OAAO,EAAE,KAAK7F,KAAL,CAAWS,OAFtB;AAGE,QAAA,MAAM,EAAE,KAAKT,KAAL,CAAWsB,MAHrB;AAIE,QAAA,YAAY,EAAE,KAAKiB,YAJrB;AAKE,QAAA,kBAAkB,EAAE,KAAKyB,kBAL3B;AAME,QAAA,UAAU,EAAE,KAAKhE,KAAL,CAAWmB,UANzB;AAOE,QAAA,gBAAgB,EAAE,KAAKuC,gBAPzB;AAQE,QAAA,SAAS,EAAE,KAAK1D,KAAL,CAAWkB,SARxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAJJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAvDF,eAuEE,oBAAC,KAAD;AACE,MAAA,KAAK,MADP;AAEE,MAAA,IAAI,EAAC,UAFP;AAGE,MAAA,MAAM,EAAE,mBACN,oBAAC,OAAD;AACE,QAAA,OAAO,EAAE,KAAKlB,KAAL,CAAWS,OADtB;AAEE,QAAA,MAAM,EAAE,KAAKT,KAAL,CAAWsB,MAFrB;AAGE,QAAA,gBAAgB,EAAE,KAAKiC,gBAHzB;AAIE,QAAA,kBAAkB,EAAE,KAAKS,kBAJ3B;AAKE,QAAA,UAAU,EAAE,KAAKhE,KAAL,CAAWmB,UALzB;AAME,QAAA,gBAAgB,EAAE,KAAKuC,gBANzB;AAOE,QAAA,SAAS,EAAE,KAAK1D,KAAL,CAAWkB,SAPxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAJJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAvEF,eAsFE,oBAAC,KAAD;AACE,MAAA,KAAK,MADP;AAEE,MAAA,IAAI,EAAC,aAFP;AAGE,MAAA,MAAM,EAAE,mBACN,oBAAC,UAAD;AACE,QAAA,mBAAmB,EAAE,KAAK0C,mBAD5B;AAEE,QAAA,UAAU,EAAE,KAAK5D,KAAL,CAAWI,UAFzB;AAGE,QAAA,gBAAgB,EAAE,KAAKiE,gBAHzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAJJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAtFF,eAiGE,oBAAC,KAAD;AACE,MAAA,KAAK,MADP;AAEE,MAAA,IAAI,EAAC,MAFP;AAGE,MAAA,MAAM,EAAE,mBACN,oBAAC,OAAD;AACE,QAAA,UAAU,EAAE,KAAKrE,KAAL,CAAWmB,UADzB;AAEE,QAAA,UAAU,EAAE,KAAKnB,KAAL,CAAWgB,UAFzB;AAGE,QAAA,gBAAgB,EAAE,KAAKuE,gBAHzB;AAIE,QAAA,cAAc,EAAE,KAAKM,cAJvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAJJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAjGF,CADF,CAVF,CADF;AA6HD;;AAhlByB;;AAmlB5B,eAAenG,UAAU,CAACK,GAAD,CAAzB;AACA;AACE;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA2FD","sourcesContent":["import React, { Component, Fragment } from \"react\";\nimport Home from \"./components/Home\";\nimport FormApplication from \"./components/FormApplication\";\nimport CustomNav from \"./components/CustomNav\";\nimport Current from \"./components/Current\";\nimport Client from \"./components/Client\";\nimport SignUp from \"./components/SignUp\";\nimport AddPet from \"./components/AddPet\";\nimport PetList from \"./components/PetList\";\nimport EditPet from \"./components/EditPet\";\nimport EditClient from \"./components/EditClient\";\nimport _ from \"lodash\";\n\nimport \"./App.css\";\n\nimport { Switch, Route, withRouter } from \"react-router-dom\";\nconst initialState = { isLoading: false, results: [], value: \"\" };\n\nclass App extends Component {\n  state = {\n    accounts: {\n      username: \"\",\n      password: \"\",\n    },\n    clientInfo: {\n      firstname: \"\",\n      lastname: \"\",\n      homephone: \"\",\n      workphone: \"\",\n    },\n    petInfo: {\n      name: \"\",\n      color: \"\",\n      specialconcerns: \"\",\n      rabies: \"\",\n    },\n    clients: \"\",\n    client_id: \"\",\n    clientName: \"\",\n    breedId: \"\",\n    breedName: \"\",\n    clientPets: \"\",\n    services: \"\",\n    serviceId: \"\",\n    breeds: \"\",\n    initialState: \"\",\n    clientIdOnSelect: \"\",\n    pets: \"\",\n    petIdOnSelect: \"\",\n  };\n\n  componentDidMount() {\n    this.fetchingAllClients();\n    this.fetchingAllBreed();\n    this.fetchingAllPets();\n    this.fetchingAllServices();\n    fetchingAllAppointments;\n  }\n\n  fetchingAllClients = () => {\n    fetch(`http://localhost:3000/clients`)\n      .then((resp) => resp.json())\n      .then((clients) => {\n        this.setState({\n          clients,\n        });\n      });\n  };\n\n  fetchingAllBreed = () => {\n    fetch(`http://localhost:3000/breeds`)\n      .then((resp) => resp.json())\n      .then((breeds) => {\n        this.setState({\n          breeds,\n        });\n      });\n  };\n\n  fetchingAllServices = () => {\n    fetch(`http://localhost:3000/services`)\n      .then((resp) => resp.json())\n      .then((services) => {\n        console.log(\"fetching all services\", services);\n        this.setState({\n          services,\n        });\n      });\n  };\n\n  fetchingAllPets = () => {\n    fetch(`http://localhost:3000/pets`)\n      .then((resp) => resp.json())\n      .then((pets) => {\n        console.log(\"fetching all pets\", pets);\n        this.setState({\n          pets,\n        });\n      });\n  };\n\n  fetchingAllAppointments = () => {\n    fetch(`http://localhost:3000/appointments`)\n      .then((resp) => resp.json())\n      .then((appointments) => {\n        console.log(\"fetching all pets\", appointments);\n        this.setState({\n          appointments,\n        });\n      });\n  };\n\n  submitingPet = (event) => {\n    this.props.history.push(\"pet\");\n    const { petInfo, breedId, client_id } = this.state;\n    console.log(\"breed id ----> \", breedId);\n    event.preventDefault();\n    const configObj = {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\",\n      },\n      body: JSON.stringify({\n        pet: {\n          name: petInfo.name,\n          color: petInfo.color,\n          specialconcerns: petInfo.specialconcerns,\n          rabies: petInfo.rabies,\n          breed_id: breedId,\n          client_id: client_id,\n        },\n      }),\n    };\n    fetch(`http://localhost:3000/pets`, configObj)\n      .then((resp) => resp.json())\n      .then((pet) => {\n        this.setState({\n          petInfo: {\n            name: \"\",\n            color: \"\",\n            specialconcerns: \"\",\n            rabies: \"\",\n          },\n        });\n        const client_id = this.state.client_id;\n        this.fetchingClientPets(client_id);\n      });\n  };\n\n  submitingEditPet = (event) => {\n    event.preventDefault();\n    const { petInfo, client_id, breedId } = this.state;\n    const petId = petInfo.id;\n    const configObj = {\n      method: \"PUT\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\",\n      },\n      body: JSON.stringify({\n        pet: {\n          name: petInfo.name,\n          color: petInfo.color,\n          specialconcerns: petInfo.specialconcerns,\n          rabies: petInfo.rabies,\n          breed_id: breedId,\n          client_id: client_id,\n        },\n      }),\n    };\n    fetch(`http://localhost:3000/pets/${petId}`, configObj)\n      .then((resp) => resp.json())\n      .then((pet) => {\n        console.log(pet);\n        this.fetchingClientPets(client_id);\n        this.setState({\n          petInfo: {\n            name: \"\",\n            color: \"\",\n            specialconcerns: \"\",\n            rabies: \"\",\n          },\n        });\n      });\n    this.props.history.push(\"/pet\");\n  };\n  petBreedOnChange = (breed) => {\n    const breedId = breed.id;\n    const breedName = breed.name;\n    this.setState({ breedId });\n    this.setState({ breedName });\n  };\n\n  submitingEditClient = (event) => {\n    event.preventDefault();\n    const { clientInfo, client_id } = this.state;\n    const c_id = clientInfo.id;\n    const configObj = {\n      method: \"PUT\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\",\n      },\n      body: JSON.stringify({\n        client: {\n          lastname: clientInfo.lastname,\n          firstname: clientInfo.firstname,\n          homephone: clientInfo.homephone,\n          workphone: clientInfo.workphone,\n        },\n      }),\n    };\n    fetch(`http://localhost:3000/clients/${c_id}`, configObj)\n      .then((resp) => resp.json())\n      .then((pet) => {\n        console.log(pet);\n        this.fetchingClientPets(client_id);\n        this.setState({\n          clientInfo: {\n            firstname: \"\",\n            lastname: \"\",\n            homephone: \"\",\n            workphone: \"\",\n          },\n        });\n        this.fetchingAllClients();\n      });\n    this.props.history.push(\"/client\");\n  };\n  petBreedOnChange = (e, breed) => {\n    console.log(\"breed change\", breed.value);\n    const breedId = breed.value;\n    const breedName = breed.name;\n    this.setState({ breedId });\n    this.setState({ breedName });\n  };\n\n  petInfoInputChange = (event) => {\n    const petInfo = { ...this.state.petInfo };\n    petInfo[event.currentTarget.name] = event.currentTarget.value;\n    this.setState({ petInfo });\n  };\n\n  handleLoginChange = (event) => {\n    const login = { ...this.state.login };\n    login[event.currentTarget.name] = event.currentTarget.value;\n    this.setState({ login });\n  };\n\n  handleChange = (event) => {\n    const accounts = { ...this.state.accounts };\n    accounts[event.currentTarget.name] = event.currentTarget.value;\n    this.setState({ accounts });\n  };\n\n  formHandleChange = (event) => {\n    const clientInfo = { ...this.state.clientInfo };\n    clientInfo[event.currentTarget.name] = event.currentTarget.value;\n    this.setState({ clientInfo });\n  };\n\n  handleClick = (event) => {\n    const { login } = this.state;\n    event.preventDefault();\n    const configObj = {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\",\n      },\n      body: JSON.stringify({\n        user: {\n          username: login.username,\n          password: login.password,\n        },\n      }),\n    };\n    fetch(`http://localhost:3000/login`, configObj)\n      .then((resp) => resp.json())\n      .then((json) => {\n        // console.log(\"json\", json);\n        if (!json.hasOwnProperty(\"error\")) {\n          window.localStorage.setItem(\"token\", json.jwt);\n          window.localStorage.setItem(\"username\", json.user.username);\n          window.localStorage.setItem(\"userId\", `${json.user.id}`);\n          // window.location.assign(\"http://localhost:3000/users\");\n          this.setState({ current_user: json.user });\n          // console.log(\"fetching\", json);\n        } else {\n          this.setState({ error: json.error });\n        }\n      })\n      .then((data) => {\n        const localUserId = localStorage.getItem(\"userId\");\n\n        if (localUserId) {\n          this.fetchCurrentUser(localUserId);\n        }\n      })\n      .catch((error) => console.log(\"username or password did not match\"));\n    this.setState({\n      username: \"\",\n      password: \"\",\n    });\n\n    this.props.history.push(\"/\");\n  };\n\n  fetchingClientPets = (client_id) => {\n    console.log(\"client info\");\n    fetch(`http://localhost:3000/clients/${client_id}`)\n      .then((resp) => resp.json())\n      .then((pets) => {\n        console.log(\"my response\", pets);\n        this.setState({\n          clientPets: pets,\n        });\n      });\n  };\n\n  addingPetToAClient = (client) => {\n    const client_id = client.id;\n    this.fetchingClientPets(client_id);\n    this.setState({ client_id });\n    this.setState({ clientName: client.firstname });\n    this.props.history.push(\"/addPet\");\n  };\n\n  addingUser = (event) => {\n    event.preventDefault();\n\n    const { accounts } = this.state;\n    const configObj = {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\",\n      },\n      body: JSON.stringify({\n        user: {\n          username: accounts.username,\n          password: accounts.password,\n        },\n      }),\n    };\n    fetch(`http://localhost:3000/signup`, configObj)\n      .then((resp) => resp.json())\n      .then((json) => {\n        console.log(\"json\", json);\n        this.props.history.push(\"/\");\n      });\n  };\n\n  clientPetOnClick = (client) => {\n    const client_id = client.id;\n    this.fetchingClientPets(client_id);\n    this.setState({ client_id });\n    this.setState({ clientName: client.firstname });\n    this.props.history.push(\"/pet\");\n  };\n\n  petOnClickDelete = (pet) => {\n    const petId = pet.id;\n    const pets = this.state.clientPets.filter((d) => d.id !== petId);\n    this.setState({ clientPets: pets });\n    fetch(`http://localhost:3000/pets/${petId}`, {\n      method: \"DELETE\",\n    });\n  };\n\n  deletePetHandleClick = (client) => {\n    const clientId = client.id;\n    const clients = this.state.clients.filter((c) => c.id !== clientId);\n    this.setState({ clients });\n    fetch(`http://localhost:3000/clients/${clientId}`, {\n      method: \"DELETE\",\n    });\n  };\n\n  petOnClickEdit = (pet) => {\n    this.setState({ petInfo: pet });\n    this.props.history.push(\"/editPet\");\n  };\n\n  addingClient = (event) => {\n    event.preventDefault();\n    const { clientInfo } = this.state;\n    fetch(\"http://localhost:3000/clients\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\",\n      },\n      body: JSON.stringify({\n        client: {\n          lastname: clientInfo.lastname,\n          firstname: clientInfo.firstname,\n          homephone: clientInfo.homephone,\n          workphone: clientInfo.workphone,\n        },\n      }),\n    })\n      .then((r) => r.json())\n      .then((client) => {\n        console.log(\"after submitting\", client);\n        this.setState({\n          clientInfo: {\n            firstname: \"\",\n            lastname: \"\",\n            homephone: \"\",\n            workphone: \"\",\n          },\n        });\n        this.fetchingAllClients();\n      });\n    this.props.history.push(\"/client\");\n  };\n\n  clientOnClickEdit = (clientInfo) => {\n    this.setState({ clientInfo });\n    this.props.history.push(\"/editclient\");\n  };\n\n  servicesOnClick = (e, service) => {\n    console.log(e);\n    console.log(\"service => \", service.value);\n\n    const serviceId = service.value;\n    this.setState({ serviceId });\n  };\n\n  selectPetOnClick = (e, pet) => {\n    console.log(\"pet -> \", pet.value);\n\n    const petIdOnSelect = pet.value;\n    this.setState({ petIdOnSelect });\n  };\n\n  checkIn = (event) => {\n    event.preventDefault();\n    fetch(\"http://localhost:3000/appointments\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\",\n      },\n      body: JSON.stringify({\n        appointment: {\n          pet_id: this.state.petIdOnSelect,\n          service_id: this.state.serviceId,\n        },\n      }),\n    })\n      .then((r) => r.json())\n      .then((appointments) => {\n        console.log(\"after submitting\", appointments);\n        this.setState({\n          appointments,\n        });\n      });\n  };\n\n  handleResultSelect = (e, { result }) =>\n    this.setState({ value: result.title });\n\n  handleSearchChange = (e, { value }) => {\n    this.setState({ isLoading: true, value });\n\n    setTimeout(() => {\n      if (this.state.value.length < 1)\n        return this.setState({ initialState: initialState });\n\n      const re = new RegExp(_.escapeRegExp(this.state.value), \"i\");\n      const isMatch = (result) => re.test(result.title);\n\n      this.setState({\n        isLoading: false,\n        results: _.filter(this.state.clients, isMatch),\n      });\n    }, 300);\n  };\n\n  render() {\n    console.log(\"pets\", this.state.pets);\n    return (\n      <Fragment>\n        <div class=\"ui huge header center aligned blue\">\n          K9 Grooming\n          <div class=\"sub header\">\n            Manage your account settings and set e-mail preferences.\n          </div>\n        </div>\n        <div class=\"ui pointing menu\">\n          <CustomNav />\n        </div>\n        <div class=\"ui segment\">\n          <Switch>\n            <Route\n              exact\n              path=\"/\"\n              render={() => (\n                <Home\n                  services={this.state.services}\n                  servicesOnClick={this.servicesOnClick}\n                  selectPetOnClick={this.selectPetOnClick}\n                  pets={this.state.pets}\n                  checkIn={this.checkIn}\n                  appointments={this.state.appointments}\n                  handleResultSelect={this.handleResultSelect}\n                  handleSearchChange={this.handleSearchChange}\n                />\n              )}\n            />\n            <Route\n              exact\n              path=\"/form\"\n              render={() => (\n                <FormApplication\n                  addingClient={this.addingClient}\n                  clientInfo={this.state.clientInfo}\n                  formHandleChange={this.formHandleChange}\n                />\n              )}\n            />\n            <Route exact path=\"/current\" render={() => <Current />} />\n            <Route\n              exact\n              path=\"/client\"\n              render={() => (\n                <Client\n                  deletePetHandleClick={this.deletePetHandleClick}\n                  clients={this.state.clients}\n                  addingPetToAClient={this.addingPetToAClient}\n                  clientOnClickEdit={this.clientOnClickEdit}\n                  clientPetOnClick={this.clientPetOnClick}\n                  clientPets={this.state.clientPets}\n                />\n              )}\n            />\n            <Route exact path=\"/customnav\" render={() => <CustomNav />} />\n            <Route\n              exact\n              path=\"/signup\"\n              render={() => (\n                <SignUp\n                  handleChange={this.handleChange}\n                  accounts={this.state.accounts}\n                  addingUser={this.addingUser}\n                />\n              )}\n            />\n            <Route\n              exact\n              path=\"/addPet\"\n              render={() => (\n                <AddPet\n                  petOnClickEdit={this.petOnClickEdit}\n                  petInfo={this.state.petInfo}\n                  breeds={this.state.breeds}\n                  submitingPet={this.submitingPet}\n                  petInfoInputChange={this.petInfoInputChange}\n                  clientPets={this.state.clientPets}\n                  petBreedOnChange={this.petBreedOnChange}\n                  breedName={this.state.breedName}\n                />\n              )}\n            />\n            <Route\n              exact\n              path=\"/editPet\"\n              render={() => (\n                <EditPet\n                  petInfo={this.state.petInfo}\n                  breeds={this.state.breeds}\n                  submitingEditPet={this.submitingEditPet}\n                  petInfoInputChange={this.petInfoInputChange}\n                  clientPets={this.state.clientPets}\n                  petBreedOnChange={this.petBreedOnChange}\n                  breedName={this.state.breedName}\n                />\n              )}\n            />\n            <Route\n              exact\n              path=\"/editclient\"\n              render={() => (\n                <EditClient\n                  submitingEditClient={this.submitingEditClient}\n                  clientInfo={this.state.clientInfo}\n                  formHandleChange={this.formHandleChange}\n                />\n              )}\n            />\n            <Route\n              exact\n              path=\"/pet\"\n              render={() => (\n                <PetList\n                  clientPets={this.state.clientPets}\n                  clientName={this.state.clientName}\n                  petOnClickDelete={this.petOnClickDelete}\n                  petOnClickEdit={this.petOnClickEdit}\n                />\n              )}\n            />\n          </Switch>\n        </div>\n      </Fragment>\n    );\n  }\n}\n\nexport default withRouter(App);\n{\n  /* <div>\n        <div class=\"ui huge header center aligned blue\">K9 Grooming</div>\n        <div class=\"ui grid\">\n          <div class=\"four column\">\n            <CustomNav />\n            <Switch>\n              <Route exact path=\"/\" render={() => <Home />} />\n              <Route\n                exact\n                path=\"/form\"\n                render={() => (\n                  <FormApplication\n                    addingClient={this.addingClient}\n                    clientInfo={this.state.clientInfo}\n                    formHandleChange={this.formHandleChange}\n                  />\n                )}\n              />\n              <Route exact path=\"/current\" render={() => <Current />} />\n              <Route\n                exact\n                path=\"/client\"\n                render={() => (\n                  <Client\n                    deletePetHandleClick={this.deletePetHandleClick}\n                    clients={this.state.clients}\n                    addingPetToAClient={this.addingPetToAClient}\n                    clientPetOnClick={this.clientPetOnClick}\n                    clientPets={this.state.clientPets}\n                  />\n                )}\n              />\n              <Route exact path=\"/customnav\" render={() => <CustomNav />} />\n              <Route\n                exact\n                path=\"/signup\"\n                render={() => (\n                  <SignUp\n                    handleChange={this.handleChange}\n                    accounts={this.state.accounts}\n                    addingUser={this.addingUser}\n                  />\n                )}\n              />\n              <Route\n                exact\n                path=\"/addPet\"\n                render={() => (\n                  <AddPet\n                    petOnClickEdit={this.petOnClickEdit}\n                    petInfo={this.state.petInfo}\n                    breeds={this.state.breeds}\n                    submitingPet={this.submitingPet}\n                    petInfoInputChange={this.petInfoInputChange}\n                    clientPets={this.state.clientPets}\n                    petBreedOnChange={this.petBreedOnChange}\n                    breedName={this.state.breedName}\n                  />\n                )}\n              />\n              <Route\n                exact\n                path=\"/editPet\"\n                render={() => (\n                  <EditPet\n                    petInfo={this.state.petInfo}\n                    breeds={this.state.breeds}\n                    submitingEditPet={this.submitingEditPet}\n                    petInfoInputChange={this.petInfoInputChange}\n                    clientPets={this.state.clientPets}\n                    petBreedOnChange={this.petBreedOnChange}\n                    breedName={this.state.breedName}\n                  />\n                )}\n              />\n              <Route\n                exact\n                path=\"/pet\"\n                render={() => (\n                  <PetList\n                    clientPets={this.state.clientPets}\n                    clientName={this.state.clientName}\n                    petOnClickDelete={this.petOnClickDelete}\n                    petOnClickEdit={this.petOnClickEdit}\n                  />\n                )}\n              />\n            </Switch>\n          </div>\n        </div>\n      </div> */\n}\n"]},"metadata":{},"sourceType":"module"}